---
version: "3.8"

services:
  ######################################################################################
  ######################################################################################
  ######################################################################################
  logstash:
    image: docker.elastic.co/logstash/logstash:${VERSION:-8.2.0}
    env_file: .env
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
      fsize: -1
      as: -1
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==${NODE_ROLE:-manager}"
      restart_policy:
        condition: on-failure
      labels:
        - traefik.enable=true
        - traefik.docker.lbswarm=true
        - traefik.docker.network=proxy

        - traefik.tcp.routers.logstash-opnsense.entrypoints=syslog-opnsense
        - traefik.tcp.routers.logstash-opnsense.rule=HostSNI(`*`)
        - traefik.tcp.routers.logstash-opnsense.tls=false
        - traefik.tcp.routers.logstash-opnsense.tls.passthrough=false
        - traefik.tcp.routers.logstash-opnsense.service=logstash-opnsense
        - traefik.tcp.services.logstash-opnsense.loadbalancer.server.port=${PORT_OPNSENSE:-5140}
        - traefik.tcp.routers.logstash-opnsense.middlewares=${MIDDLEWARE_SECURED:-default-whitelist@file}

        # sysmon
        - traefik.tcp.routers.logstash-beats.entrypoints=elastic-beats
        - traefik.tcp.routers.logstash-beats.rule=HostSNI(`*`)
        - traefik.tcp.routers.logstash-beats.tls=false
        - traefik.tcp.routers.logstash-beats.tls.passthrough=false
        - traefik.tcp.routers.logstash-beats.service=logstash-beats
        - traefik.tcp.services.logstash-beats.loadbalancer.server.port=${PORT_BEATS:-5044}
        - traefik.tcp.routers.logstash-beats.middlewares=${MIDDLEWARE_SECURED:-default-whitelist@file}

        # - traefik.tcp.routers.logstash-unifi.entrypoints=syslog-unifi
        # - traefik.tcp.routers.logstash-unifi.rule=HostSNI(`*`)
        # - traefik.tcp.routers.logstash-unifi.tls=false
        # - traefik.tcp.routers.logstash-unifi.tls.passthrough=false
        # - traefik.tcp.routers.logstash-unifi.service=logstash-unifi
        # - traefik.tcp.services.logstash-unifi.loadbalancer.server.port=${PORT_UNIFI:-5145}
        # - traefik.tcp.routers.logstash-unifi.middlewares=${MIDDLEWARE_SECURED:-default-whitelist@file}

        - traefik.udp.routers.logstash-unifi.entrypoints=syslog-unifi
        - traefik.udp.routers.logstash-unifi.service=logstash-unifi
        - traefik.udp.services.logstash-unifi.loadbalancer.server.port=${PORT_UNIFI:-5145}
    # ports:
    #   # - target: 5040 # suricata
    #   #   published: 5040
    #   #   mode: host
    #   - target: 5044 # beats
    #     published: 5044
    #     mode: host
    #     protocol: tcp
    #   # - target: 5190 # haproxy
    #   #   published: 5190
    #   #   mode: host
    #   # - target: 9600 # general information about the Logstash
    #   #   published: 9600
    #   #   mode: host
    #   #   protocol: tcp
    #   - target: 5140 # firewall-1 (opnsense)
    #     published: 5140
    #     mode: host
    #     protocol: tcp
    #   # - target: 5141
    #   #   published: 5141 # firewall-2 (pfSense)
    #   #   mode: host
    #   #   protocol: tcp
    configs:
      - source: pipelines_config
        target: /usr/share/logstash/config/pipelines.yml
        mode: 0777
      # - source: log4j2_config
      #   target: /usr/share/logstash/config/log4j2.properties
      #   mode: 0777
    volumes:
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro

      - ./config/pfelk/conf.d/:/etc/pfelk/conf.d:ro
      - ./config/pfelk/patterns/:/etc/pfelk/patterns:ro
      - ./config/pfelk/databases/:/etc/pfelk/databases:ro

      - ./config/sysmon/conf.d/:/etc/sysmon/conf.d:ro
      - ./config/sysmon/enrichments/cti:/etc/sysmon/cti:ro

      - ./config/unifi/conf.d/:/etc/unifi/conf.d:ro
    environment:
      LS_JAVA_OPTS: -Xms${ELK_MEM_USE_GB:-2g} -Xmx${ELK_MEM_USE_GB:-2g}
      network.host: 0.0.0.0

      CONFIG_RELOAD_AUTOMATIC: ${LOGSTAST_RELOAD_AUTOMATIC:-true}
      ELASTICSEARCH_HOSTS: ${ELASTICSEARCH_PROTOCOL:-http}://${ELASTICSEARCH_HOST:-elasticsearch}:${ELASTICSEARCH_PORT:-9200}
      ELASTICSEARCH_USERNAME: ${ELASTICSEARCH_USERNAME:-logstash_system}
      ELASTICSEARCH_SSL_VERIFICATIONMODE: ${ELASTICSEARCH_SSL_VERIFICATIONMODE:-none}
      xpack.monitoring.enabled: ${XPACK_MONITORING_ENABLED:-true}
      xpack.monitoring.elasticsearch.hosts: ${ELASTICSEARCH_PROTOCOL:-http}://${ELASTICSEARCH_HOST:-elasticsearch}:${ELASTICSEARCH_PORT:-9200}
      xpack.monitoring.elasticsearch.username: ${ELASTICSEARCH_USERNAME:-logstash_system}
    networks:
      # default: {}
      proxy: {}
      elasticsearch: {}
    restart: always

######################################################################################
######################################################################################
######################################################################################
networks:
  # default:
  #   driver: ${NETWORK_MODE:-bridge}
  proxy:
    external: true
  elasticsearch:
    name: ${ELASTICSEARCH_NETWORK_NAME:-elasticsearch}
    external: true

volumes:
  config: {}

configs:
  pipelines_config:
    file: $PWD/config/pipelines.yml
  # log4j2_config:
  #   file: $PWD/config/log4j2.properties
