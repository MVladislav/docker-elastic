---
version: "3.8"

services:
  ######################################################################################
  ######################################################################################
  ######################################################################################
  kibana:
    image: docker.elastic.co/kibana/kibana:${ELASTICSEARCH_VERSION:-8.0.0}
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65535
        hard: 65535
      fsize: -1
      as: -1
    deploy:
      mode: replicated
      replicas: 1
      placement:
        max_replicas_per_node: 1
        constraints:
          - "node.role==${NODE_ROLE:-manager}"
      restart_policy:
        condition: on-failure
    ports:
      - target: 5601
        published: 5601
        protocol: tcp
        mode: host
    volumes:
      - kibana:/usr/share/kibana/data
    configs:
      - source: config_file
        target: /usr/share/kibana/config/kibana.yml
      - source: ssl_key
        target: ${SERVER_SSL_KEY:-/usr/share/kibana/config/certs/kibana_node_key.pem}
      - source: ssl_certificate
        target: ${SERVER_SSL_CERTIFICATE:-/usr/share/kibana/config/certs/kibana_node.pem}
    environment:
      ES_JAVA_OPTS: -Xms${ELK_MEM_USE_GB:-1g} -Xmx${ELK_MEM_USE_GB:-1g}
      network.host: 0.0.0.0
    networks:
      default: {}
      elastic_default: {}
    restart: always
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I http://localhost:5601 | grep -q 'HTTP/1.1 302 Found'",
        ]
      interval: 10s
      timeout: 10s
      retries: 120

######################################################################################
######################################################################################
######################################################################################
networks:
  default:
    driver: ${NETWORK_MODE:-bridge}
  elastic_default:
    external:
      name: ${ELASTICSEARCH_NETWORK_NAME:-elastic_default}

volumes:
  kibana: {}

configs:
  config_file:
    file: $PWD/config/kibana.yml
  ssl_key:
    file: $PWD/config/ssl/kibana_node_key.pem
  ssl_certificate:
    file: $PWD/config/ssl/kibana_node.pem
